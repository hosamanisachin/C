In an array, compare two values and see to it that there are no elements in the array who's value lies between the two.
Say element V then U<V<W or U>V>W.
Such pair of U,W is called adjacent.
The elements in the array would range from 1 to 40,000. And each element would range from -1,00,000 to 1,00,000.
Retunrn Minimum distance is A[u]-A[w] if such unique pairs found.
Return -1 is min distance is >100,000,000
Return -2 is no adacent indice.


#include<stdio.h>

int func(int a[],int no)
{
	int i,j,k,flag1=0,flag2=0,x=0;

	for(i=0;i<=no-2;i++)
	{
		for(j=i+1;j<=no-1;j++)
		{
			for(k=0;k<=no-1;k++)
			{
				if(k!=i && k!=j){
					if((a[k]>=a[i] && a[k]<=a[j]) || (a[k]<=a[i] && a[k]>=a[j]) )
					{//there is a vlue between them
			//			printf("True A(%d,%d,%d)-value[%d]-[%d] comp [%d] \n",i,j,k,a[i],a[j],a[k]);
						flag1=1;
						break;
					}
					
					else
					{	
			//			printf("Not True A(%d,%d,%d)-value[%d]-[%d] comp [%d] \n",i,j,k,a[i],a[j],a[k]);
						flag2=1;
					}
				}
				else;

			}
			if(flag1!=1 && flag2==1)
				{
					printf("A(%d,%d,%d)-value[%d]-[%d] comp [%d] \n",i,j,k,a[i],a[j],a[k]);
				}
			else{
				flag1=0;
				flag2=0;
				}
			}
		}
	
return 0;
}

int main()
{
	int arr[]={0,3,5,7,11,1,2};
	int n=7;
	func(arr,n);
	return 0;
}
